CREATE PROCEDURE dbo.Sync_Insert (@ATABLENAME VARCHAR(100)) AS
BEGIN
    IF (OBJECT_ID('tempdb..##TABLE_DESCRIPTION') IS NOT NULL) AND (@ATABLENAME <> '')
    BEGIN
        DECLARE @KEY_NAME NVARCHAR(100)
        DECLARE @FIELD_NAME NVARCHAR(50)
        DECLARE @PARAM_FIELDS NVARCHAR(1000)
        DECLARE @INSERT_FIELDS NVARCHAR(1000)
        DECLARE @VALUES_FIELDS NVARCHAR(1000)
        DECLARE @COUNTER TINYINT
        DECLARE @COLUMN_NAME NVARCHAR(100)
        DECLARE @TYPE_DEF NVARCHAR(100)
        DECLARE @CMD NVARCHAR(4000)

        -- RETRIEVE PK COLUMN NAME
        SELECT @KEY_NAME = COLUMN_NAME FROM ##TABLE_DESCRIPTION WHERE IS_KEY = 1
        SET @PARAM_FIELDS = ''
        SET @INSERT_FIELDS = ''
        SET @VALUES_FIELDS = ''
        SET @COUNTER = 1

        DECLARE FIELD_LIST CURSOR FAST_FORWARD FOR SELECT COLUMN_NAME, TYPE_DEF FROM ##TABLE_DESCRIPTION
        OPEN FIELD_LIST
        FETCH NEXT FROM FIELD_LIST INTO @COLUMN_NAME, @TYPE_DEF
        WHILE @@FETCH_STATUS = 0
        BEGIN
            IF @PARAM_FIELDS <> ''
            BEGIN
                SET @PARAM_FIELDS = @PARAM_FIELDS + ', '
                SET @INSERT_FIELDS = @INSERT_FIELDS + ', '
                SET @VALUES_FIELDS = @VALUES_FIELDS + ', '
            END
            SET @PARAM_FIELDS = @PARAM_FIELDS + '@P_' + CAST(@COUNTER AS NVARCHAR(3)) + ' ' + @TYPE_DEF
            SET @INSERT_FIELDS = @INSERT_FIELDS + '[' + @COLUMN_NAME + ']'
            SET @VALUES_FIELDS = @VALUES_FIELDS + '@P_' + CAST(@COUNTER AS NVARCHAR(3))
            SET @COUNTER = @COUNTER + 1
            FETCH NEXT FROM FIELD_LIST INTO @COLUMN_NAME, @TYPE_DEF
        END
        CLOSE FIELD_LIST
        DEALLOCATE FIELD_LIST

        SET @CMD = 'CREATE PROCEDURE [dbo].[' + @ATABLENAME + '_insert] ' + @PARAM_FIELDS + ', @sync_row_count Int OUTPUT AS
        BEGIN
            SET @sync_row_count = 0;
            IF NOT EXISTS (SELECT * FROM [' + @ATABLENAME + '_tracking] WHERE [' + @KEY_NAME + '] = @P_1)
            BEGIN
                SET IDENTITY_INSERT [' + @ATABLENAME + '] ON;
                INSERT INTO [' + @ATABLENAME + '] (' + @INSERT_FIELDS + ') VALUES (' + @VALUES_FIELDS + ');
                SET @sync_row_count = @@rowcount;
                SET IDENTITY_INSERT [' + @ATABLENAME + '] OFF;
            END
        END'

        --PRINT @CMD
        EXEC SP_EXECUTESQL @CMD
    END
    ELSE
        PRINT 'ERROR : UNABLE TO FOUND TEMPORARY TABLE OR TABLE NAME INVALID'
END